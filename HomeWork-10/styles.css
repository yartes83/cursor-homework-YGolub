/* https://www.w3schools.com/cssref/css3_pr_transform.asp
 https://www.w3schools.com/cssref/playdemo.asp?filename=playcss_transform&preval=scale(2,3)
 https://создание-сайта.net/news-new/primeri-css-gradientov.html
 https://code.mu/ru/markup/manual/css/function/linear-gradient/

*/
.wrapper {
    width: 100vw;
    height: 100vh;
    background-color: #f8edd6;
    position: relative;
}
.Swords {
    display: flex;
    position: absolute;
    width: 400px;
    height: 400px;
    margin-top: 50px;
    margin-left: 35%;
    background-color: black;
}
.sword_battle{
    /*background-color: black;*/
    position: relative;
    width: 100px;
    height: 100px;
    margin-left: 160px;
    margin-top: 160px;
    cursor: pointer;
}
.sword-1 {
    position: absolute;
    width: 100px;
    height: 7px;
    background: linear-gradient(270deg, white, white 15%, black 15%, black 30%, white 30%);
    margin-top: 0;
    margin-left: 0;
}

.sword-2 {
    position: absolute;
    width: 100px;
    height: 7px;
    background: linear-gradient(90deg, white, white 15%, black 15%, black 30%, white 30%);
    margin-left: 0;
    margin-top: 35px;
    animation-play-state: running;
}
.sword-3 {
    position: absolute;
    width: 100px;
    height: 7px;
    background: linear-gradient(270deg, white, white 15%, black 15%, black 30%, white 30%);
    margin-left: 0;
    top: 65px;
    transform: rotate(0deg);
}
.sword_battle:hover > .sword-1{ display: none;}

.sword_battle:hover > .sword-2 {
    transform: rotate(-45deg);
    box-shadow: 7px -2px 12px 2px rgb(227, 70, 118);
    background: linear-gradient(90deg, rgb(243, 62, 62), rgb(232, 84, 84) 15%, black 15%, black 30%, red 30%);
}
.sword_battle:hover > .sword-3 {
    top: 36px;
    transform: rotate(45deg);
    box-shadow: -8px -3px 15px 3px rgb(2, 244, 34);
    background: linear-gradient(270deg, rgb(130, 246, 92), rgb(189, 244, 78) 15%, black 15%, black 30%, greenyellow 30%);

}
/*.sword_battle:hover > .Swords {*/
/*    background: url("images/yoda4.png");}*/


.Swords:hover {background: url("images/yoda5.png");}
/*-------------------------------------------------------------------------------------------------------------------------------------------*/
.Newtons_pendulum{
    border: 1px solid rgba(187, 210, 246, 0.61);
    display: flex;
    position: relative;
    width: 600px;
    height: 300px;
    background-color: #EAE7DA;
    top: 500px;
    left: 31%;
}
.ball {
    position: relative;
    width: 40px;
    height: 40px;
    border-radius: 50px;
    border: none;
    box-shadow:  0px 66px 15px -10px rgb(241, 192, 192);
}

.balls{
    display: flex;
    position: absolute;
    left: 26.67%;
    top: 43.5%;
    cursor: pointer;
}
.ball-1 {
    left: 0px;
    top: 0;
    background: linear-gradient(to right, #577190, #213b4f);
    animation-name: ball1;
    animation-direction: alternate-reverse;
    animation-duration: 0.50s;
    animation-timing-function: ease;
    animation-delay: 0s;
    animation-iteration-count: infinite;
}
@keyframes ball1 {
    0% {
        left: 0px;
        top: 0;
    }
    60% {
        left: 0px;
        top: 0;
    }
    80% {
        left: -90px;
    }
    100% {
        left: -95px;
        top: -55px;
    }
}
.ball-2 {background: linear-gradient(to right, #2a415b, #3c4c71);}
.ball-3 { background: linear-gradient(to right, #5a617d, #876073);}
.ball-4 { background: linear-gradient(to right, #5a353b, #7f3738);}
.ball-5 { background: linear-gradient(to right, #9d322e, #ba342a);}
.ball-6 { background: linear-gradient(to right, #BC3728, #CD3322);}
.ball-7 {
    background: linear-gradient(to right, #a72217, #ed2e18);
    animation-name: ball7;
    animation-iteration-count: infinite; /* animation-iteration-count визначає кількість відтворення анімації. */
    animation-direction: alternate-reverse; /*animation-direction визначає, чи має відтворюватися анімація вперед, назад або по черзі.*/
    animation-duration: 0.50s; /* animation-duration визначає, скільки часу має тривати анімація для завершення одного циклу*/
    animation-timing-function: ease; /* Визначає animation-timing-function криву швидкості анімації. Крива швидкості визначає ЧАС, за який анімація змінює один набір стилів CSS на інший.Крива швидкості використовується для плавного внесення змін.*/
    animation-delay: 0.4s; /* Властивість animation-delay визначає затримку для початку анімації. */
}
@keyframes ball7 {
    0% {
        left: 0px;
        top: 0;
    }
    50% {
        left: 0px;
        top: 0;
    }
    80% {
        left: 80px;
    }
    100% {
        left: 95px;
        top: -55px;
    }
}
.balls:hover > .ball {
    animation-play-state: paused;
    cursor: pointer;
}





